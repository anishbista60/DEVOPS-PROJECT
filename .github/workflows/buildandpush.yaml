name: Build and Publish with ko

on:
  push:
    paths:
    - 'Production-Ready-project/**'
    branches: ['main']

jobs:
  release-ko:
    name: Release with ko
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.5'

      - name: Set up ko
        uses: ko-build/setup-ko@v0.6
        with:
          version: v0.14.1  # Specify the version of ko if needed

      - name: Log in to Docker Hub
        env:
          KO_DOCKER_REPO: docker.io/anish60  # Update with your Docker Hub namespace
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | ko login docker.io --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Get git SHA short
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and Publish with ko
        env:
          KO_DATA_PATH: kodata/
          KO_DOCKER_REPO: docker.io/anish60
        run: |
          cd Production-Ready-project
          ko build -t sha-${{ env.sha_short }}
          
      - name: Generate deploy manifest from Jinja template
        uses: cuchi/jinja2-action@v1.1.0
        with: 
          template: Production-Ready-project/jinga-template/deploy.yaml
          output_file: Production-Ready-project/manifests/deployment.yaml
          strict: true
          variables: |
            image_deploy_tag=sha-${{ env.sha_short }}
            
      - name: Configure git for the action
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
      - name: Stash unstaged changes
        run: git stash --include-untracked
        
      - name: Pull latest changes from the remote branch
        run: git pull origin main --rebase
        
      - name: Apply stashed changes
        run: git stash pop || echo "No stashed changes to apply"

      - name: Commit deploy manifest on local repo
        run: |

          git add Production-Ready-project/manifests/deployment.yaml
          git commit -s -m "[skip ci] Generate deployment manifests"
          
      - name: Push deploy manifests to remote repo
        uses: ad-m/github-push-action@v0.6.0
        with: 
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main

